import os, time, random, re, html, datetime as dt, requests
# ---- TZ: Kyiv ----
try:
    from zoneinfo import ZoneInfo
    KYIV = ZoneInfo("Europe/Kyiv")
except Exception:
    from datetime import timezone, timedelta
    KYIV = timezone(timedelta(hours=3))

# ---- Env (–ø–æ–¥—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç —Å—Ç–∞—Ä—ã–µ –∏ –Ω–æ–≤—ã–µ –∏–º–µ–Ω–∞) ----
BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN") or os.getenv("BOT_TOKEN")
CHANNEL_ID = os.getenv("TELEGRAM_CHANNEL_ID") or os.getenv("CHANNEL_ID")
OPENAI_KEY = os.getenv("OPENAI_KEY") or os.getenv("OPENAI_API_KEY")
MODEL_NAME = os.getenv("MODEL_NAME", "gpt-4o-mini")

if not BOT_TOKEN or not CHANNEL_ID:
    raise RuntimeError("Missing env: set TELEGRAM_BOT_TOKEN/BOT_TOKEN –∏ TELEGRAM_CHANNEL_ID/CHANNEL_ID")
if not OPENAI_KEY:
    raise RuntimeError("Missing env: set OPENAI_KEY (OpenAI API key)")

from openai import OpenAI
client = OpenAI(api_key=OPENAI_KEY)

# ---- Markdown -> HTML –¥–ª—è Telegram ----
def md_to_html(s: str) -> str:
    s = s.strip()
    s = html.escape(s)
    s = re.sub(r'(?m)^\s*#{1,6}\s+', '', s)          # —É–±–∏—Ä–∞–µ–º ### –∑–∞–≥–æ–ª–æ–≤–∫–∏
    s = re.sub(r'\*\*(.+?)\*\*', r'<b>\1</b>', s)    # **bold**
    s = re.sub(r'(?<!\*)\*(?!\*)(.+?)(?<!\*)\*(?!\*)', r'<i>\1</i>', s)  # *italic*
    s = re.sub(r'_(.+?)_', r'<i>\1</i>', s)          # _italic_
    return s

def send_text(text: str):
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    data = {"chat_id": CHANNEL_ID, "text": md_to_html(text), "parse_mode": "HTML"}
    r = requests.post(url, data=data, timeout=60)
    if not r.ok:
        raise RuntimeError(f"Telegram error: {r.status_code} {r.text}")

# ---- –¢–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è (30+) ----
TOPICS = [
    "–ü–æ—Ä–∞–¥–∏ –∑ Photoshop –¥–ª—è —Ä–µ–∫–ª–∞–º–Ω–∏—Ö –±–∞–Ω–µ—Ä—ñ–≤",
    "–î–æ–±—ñ—Ä–∫–∏ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏—Ö —à—Ä–∏—Ñ—Ç—ñ–≤ –¥–ª—è –∫–æ–º–µ—Ä—Ü—ñ–π–Ω–∏—Ö –ø—Ä–æ—î–∫—Ç—ñ–≤",
    "–õ–∞–π—Ñ—Ö–∞–∫–∏ Figma –¥–ª—è —à–≤–∏–¥–∫–æ–≥–æ –ø—Ä–æ—Ç–æ—Ç–∏–ø—É–≤–∞–Ω–Ω—è",
    "–ö–æ–º–ø–æ–∑–∏—Ü—ñ—è —Ç–∞ —ñ—î—Ä–∞—Ä—Ö—ñ—è —É –∫—Ä–µ–∞—Ç–∏–≤–∞—Ö",
    "–ö–æ–ª—å–æ—Ä–æ–≤—ñ —Å—Ö–µ–º–∏, –∫–æ–Ω—Ç—Ä–∞—Å—Ç, –∞–∫—Ü–µ–Ω—Ç–∏",
    "–¢–∏–ø–æ–≤—ñ –ø–æ–º–∏–ª–∫–∏ –¥–∏–∑–∞–π–Ω–µ—Ä—ñ–≤-–ø–æ—á–∞—Ç–∫—ñ–≤—Ü—ñ–≤ —ñ —è–∫ —ó—Ö —É–Ω–∏–∫–∞—Ç–∏",
    "–°—ñ—Ç–∫–∏, –º–æ–¥—É–ª—å–Ω—ñ—Å—Ç—å —Ç–∞ 8pt-—Å–∏—Å—Ç–µ–º–∞",
    "–í—ñ–¥—Å—Ç—É–ø–∏, —Ä–∏—Ç–º, baseline grid",
    "–®—Ä–∏—Ñ—Ç–æ–≤—ñ –ø–∞—Ä–∏: Sans + Serif –¥–ª—è –∫–∏—Ä–∏–ª–∏—Ü—ñ",
    "–ï–∫—Å–ø–æ—Ä—Ç –∑–æ–±—Ä–∞–∂–µ–Ω—å –¥–ª—è —Å–æ—Ü–º–µ—Ä–µ–∂ –±–µ–∑ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ñ–≤",
    "CTA —ñ –º—ñ–∫—Ä–æ–∫–æ–ø—ñ: —è–∫ –∑—Ä–æ–±–∏—Ç–∏ –∫–ª—ñ–∫–∞–±–µ–ª—å–Ω–∏–º",
    "–¢—Ä–µ–Ω–¥–æ–≤—ñ —Å—Ç–∏–ª—ñ: –ø–ª–æ—Å–∫–∞ –≥—Ä–∞—Ñ—ñ–∫–∞, –≥—Ä–∞–¥—ñ—î–Ω—Ç–∏, glass",
    "–ú—ñ–∫—Ä–æ–∞–Ω—ñ–º–∞—Ü—ñ—ó —Ç–∞ —à–≤–∏–¥–∫—ñ –ø—Ä–æ—Ç–æ—Ç–∏–ø–∏",
    "–ö–æ–º–ø–æ–Ω–µ–Ω—Ç–∏/–≤–∞—Ä—ñ–∞–Ω—Ç–∏/—Ç–æ–∫–µ–Ω–∏ —É Figma",
    "–Ñ–¥–∏–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ —ñ–∫–æ–Ω–æ–∫: —Å—ñ—Ç–∫–∞, —Ç–æ–≤—â–∏–Ω–∞ –ª—ñ–Ω—ñ—ó, –æ–ø—Ç–∏–∫–∞",
    "UX-—Ç–µ–∫—Å—Ç–∏ —ñ —Å–ø—ñ–≤–ø—Ä–∞—Ü—è –∑ –∫–æ–ø—ñ—Ä–∞–π—Ç–µ—Ä–æ–º",
    "–ü–æ—à—É–∫ —Ä–µ—Ñ–µ—Ä–µ–Ω—Å—ñ–≤ —ñ –ø–æ–±—É–¥–æ–≤–∞ moodboard",
    "–ì–∞—Ä—è—á—ñ –∫–ª–∞–≤—ñ—à—ñ —É Photoshop/Illustrator",
    "–ß–µ–∫–ª–∏—Å—Ç –ø–µ—Ä–µ–¥ –∑–¥–∞—á–µ—é –º–∞–∫–µ—Ç–∞",
    "–ê–π–¥–µ–Ω—Ç–∏–∫–∞ –º–∞–ª–æ–≥–æ –±—ñ–∑–Ω–µ—Å—É: —â–æ –¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∑—Ä–æ–±–∏—Ç–∏",
    "–û–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è —Ñ–æ–Ω—É —ñ –∑–Ω–∏–∂–µ–Ω–Ω—è ¬´–≤—ñ–∑—É–∞–ª—å–Ω–æ–≥–æ —à—É–º—É¬ª",
    "CRAP-–ø—Ä–∏–Ω—Ü–∏–ø–∏: –±–ª–∏–∑—å–∫—ñ—Å—Ç—å, –≤–∏—Ä—ñ–≤–Ω—é–≤–∞–Ω–Ω—è, –ø–æ–≤—Ç–æ—Ä–µ–Ω–Ω—è, –∫–æ–Ω—Ç—Ä–∞—Å—Ç",
    "–ó–∞–≥–æ–ª–æ–≤–∫–∏/–ø—ñ–¥–∑–∞–≥–æ–ª–æ–≤–∫–∏: –º–æ–¥—É–ª—å–Ω–∞ —à–∫–∞–ª–∞",
    "–®–≤–∏–¥–∫—ñ A/B —Ç–µ—Å—Ç–∏ –∫—Ä–µ–∞—Ç–∏–≤—ñ–≤",
    "–ë–∞–ª–∞–Ω—Å –±—Ä–µ–Ω–¥—É —Ç–∞ –ø–µ—Ä—Ñ–æ—Ä–º–∞–Ω—Å—É",
    "–°—Ç–æ—Ä—ñ–∑-—à–∞–±–ª–æ–Ω–∏ –±–µ–∑ ¬´—à–∞–±–ª–æ–Ω–Ω–æ—Å—Ç—ñ¬ª",
    "–¢–∏–ø–æ–≥—Ä–∞—Ñ—ñ–∫–∞ –¥–ª—è –∫–∏—Ä–∏–ª–∏—Ü—ñ: –ø—ñ–¥–≤–æ–¥–Ω—ñ –∫–∞–º–µ–Ω—ñ",
    "–ú–æ–¥—É–ª—å–Ω—ñ —Å—ñ—Ç–∫–∏ –ø—ñ–¥ –±–∞–Ω–µ—Ä–Ω—ñ —Ñ–æ—Ä–º–∞—Ç–∏",
    "–§–æ—Ç–æ–±–∞–Ω–∫ vs AI-–≥–µ–Ω–µ—Ä–∞—Ü—ñ—è: —é—Ä–∏–¥–∏—á–Ω—ñ –Ω—é–∞–Ω—Å–∏",
    "–û–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è —Ñ–∞–π–ª—ñ–≤: PNG/JPG/WEBP/SVG",
    "–ö–ª—ñ–∫–±–µ–π—Ç–Ω—ñ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –±–µ–∑ —Ç–æ–∫—Å–∏—á–Ω–æ—Å—Ç—ñ: –ø—Ä–∏–∫–ª–∞–¥–∏",
]

def build_prompt():
    direction = random.choice(TOPICS)
    return f"""
–¢–∏ ‚Äî –µ–∫—Å–ø–µ—Ä—Ç –∑ –≥—Ä–∞—Ñ—ñ—á–Ω–æ–≥–æ –¥–∏–∑–∞–π–Ω—É. –ù–∞–ø–∏—à–∏ –ø–æ—Å—Ç —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –Ω–∞ —Ç–µ–º—É: "{direction}".
–í–∏–º–æ–≥–∏:
- 90‚Äì150 —Å–ª—ñ–≤. –î—Ä—É–∂–Ω—ñ–π —Ç–æ–Ω, —Ç—Ä—ñ—à–∫–∏ –≥—É–º–æ—Ä—É –±–µ–∑ –ø–µ—Ä–µ–≥–∏–Ω—É.
- 2‚Äì6 –¥–æ—Ä–µ—á–Ω–∏—Ö –µ–º–æ–¥–∑—ñ –≤ —Ç–µ–∫—Å—Ç—ñ.
- –î–æ–∑–≤–æ–ª–µ–Ω–æ –∫–æ—Ä–æ—Ç–∫–∏–π –∫–ª—ñ–∫–±–µ–π—Ç–Ω–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ —É –ø–µ—Ä—à–æ–º—É —Ä—è–¥–∫—É, –ø–æ—Ç—ñ–º ‚Äî –∑–º—ñ—Å—Ç.
- –î–∞–π 1‚Äì3 –ø—Ä–∞–∫—Ç–∏—á–Ω—ñ –ø–æ—Ä–∞–¥–∏ –∞–±–æ –º—ñ–Ω—ñ-–∞–ª–≥–æ—Ä–∏—Ç–º.
- –ñ–æ–¥–Ω–æ—ó —Ç–æ–∫—Å–∏—á–Ω–æ—Å—Ç—ñ, –º–∞–∫—Å–∏–º—É–º –∫–æ—Ä–∏—Å—Ç—ñ. –§–æ—Ä–º–∞—Ç—É–π –∞–±–∑–∞—Ü–∞–º–∏.
""".strip()

def generate_post_text():
    try:
        resp = client.chat.completions.create(
            model=MODEL_NAME,
            messages=[{"role": "user", "content": build_prompt()}],
            temperature=0.9,
        )
        return resp.choices[0].message.content.strip()
    except Exception as e:
        # –§–æ–ª–±–µ–∫, —è–∫—â–æ API —Ç–∏–º—á–∞—Å–æ–≤–æ –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î
        return ("üé® –®–≤–∏–¥–∫–∞ –ø–æ—Ä–∞–¥–∞: –Ω–µ –ø–µ—Ä–µ–≤–∞–Ω—Ç–∞–∂—É–π –º–∞–∫–µ—Ç. "
                "–í–∏–¥—ñ–ª–∏ –æ–¥–∏–Ω –≥–æ–ª–æ–≤–Ω–∏–π –∞–∫—Ü–µ–Ω—Ç, –¥–∞–π –ø–æ–≤—ñ—Ç—Ä—è –Ω–∞–≤–∫–æ–ª–æ CTA —ñ –ø–µ—Ä–µ–≤—ñ—Ä —á–∏—Ç–∞–±–µ–ª—å–Ω—ñ—Å—Ç—å –Ω–∞ –º–æ–±—ñ–ª—å–Ω–æ–º—É. üòâ")

def sleep_until_next_15min():
    now = dt.datetime.now(KYIV)
    # —Å–ª–µ–¥—É—é—â–∞—è –≥—Ä–∞–Ω–∏—Ü–∞: 0,15,30,45
    minute = (now.minute // 15 + 1) * 15
    next_slot = now.replace(second=0, microsecond=0)
    if minute >= 60:
        next_slot = next_slot.replace(minute=0) + dt.timedelta(hours=1)
    else:
        next_slot = next_slot.replace(minute=minute)
    delay = (next_slot - now).total_seconds()
    if delay < 1: delay = 1
    time.sleep(delay)

def main():
    print("üü¢ 15-min autoposter started. TZ: Europe/Kyiv", flush=True)
    posted_slots = set()
    while True:
        try:
            # –ñ–¥—ë–º —Å–ª–µ–¥—É—é—â—É—é 15-–º–∏–Ω—É—Ç–∫—É
            sleep_until_next_15min()
            now = dt.datetime.now(KYIV).strftime("%Y-%m-%d %H:%M")
            if now in posted_slots:
                continue
            text = generate_post_text()
            send_text(text)
            posted_slots.add(now)
            print(f"[{now}] Posted ‚úÖ", flush=True)
        except Exception as e:
            print("‚ö†Ô∏è Error:", e, flush=True)
            time.sleep(10)

if __name__ == "__main__":
    main()
